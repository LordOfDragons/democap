name: Distribute

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      artifact:
        required: true
        type: string
      lfscache:
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: ${{ !inputs.lfscache }}
        
      - name: Create LFS file hash list
        if: ${{ inputs.lfscache }}
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-objects-id

      - name: Restore LFS Cache
        uses: actions/cache@v4
        id: lfs-cache
        if: ${{ inputs.lfscache }}
        with:
          path: .git/lfs
          key: lfs-cache-${{ hashFiles('.lfs-objects-id') }}
          restore-keys: lfs-cache-

      - name: Git LFS Pull
        if: ${{ inputs.lfscache }}
        run: |
          wget https://rptd.ch/misc/debug/gitlfs/git-lfs_3.2.0_amd64.deb
          sudo dpkg -i git-lfs_3.2.0_amd64.deb
          
          GIT_TRACE=1 GIT_CURL_VERBOSE=1 git lfs pull 2>&1 | tee lfs.log
          if grep -q "error:" "lfs.log" ; then
            git lfs logs last
            exit 1
          fi
      
      - name: Distribute
        id: distribute
        uses: LordOfDragons/build-delga@v1
        with:
          projectFile: 'DEMoCap.degp'
          profile: 'Release'
        
      - name: Rename distribution file
        run: |
          cp -a distribute/DEMoCap.delga DEMoCap-${{ inputs.version }}.delga
        
      - name: Store DELGA
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact }}
          path: DEMoCap-${{ inputs.version }}.delga
          if-no-files-found: error
