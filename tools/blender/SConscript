import os
import shutil
import fnmatch

env = Environment()

# blender addon
def globFiles(env, search, pattern, result, recursive=True):
	oldcwd = os.getcwd()
	os.chdir(env.Dir('.').srcnode().abspath)
	
	for root, dirs, files in os.walk(search):
		if recursive:
			if '.svn' in dirs:
				dirs.remove('.svn')
			if '.git' in dirs:
				dirs.remove('.git')
			if '__pycache__' in dirs:
				dirs.remove('__pycache__')
		else:
			del dirs[:]
		
		for s in fnmatch.filter(files, pattern):
			result.append(root + os.sep + s)
	
	os.chdir(oldcwd)

def createZipFile(env, target, source):
	shutil.make_archive(target[0].abspath, 'zip', source[0].abspath)

contentVersion = '1.0'

content = []

dataFiles = []
globFiles(env, 'democap-tools', '*', dataFiles)

for f in dataFiles:
	path = f.split('/')
	content.append(env.InstallAs(os.path.join('content', 'democap-tools', *path[1:]), f))

contentArchive = env.Command('democap-tools-{}'.format(contentVersion),
	'content', env.Action(createZipFile, 'Archive Blender Addon'))
env.Depends(contentArchive, content)

Default(env.Alias('blenderAddon', contentArchive))

# default
