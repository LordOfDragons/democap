/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2025, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Elements
pin Democap.Behaviors
pin Dragengine.Scenery
pin Dragengine.LoadSave

pin Dragengine.Preloading

/**
 * Visualize VR device element class.
 */
class VisualizeVRDeviceClass extends BehaviorElementClass
	public static fixed var String defaultClassName = "VisualizeVRDevice"
	
	public var ECBehaviorComponent component
	public var ECBehaviorCollider collider
	public var ECBehaviorDynamicSkin dynamicSkin
	public var ECBHideCondition hideCondition
	public var ECBVisualizeInputDevice visualizeInputDevice
	
	
	/** Create element class. */
	func new() this(defaultClassName)
	end
	
	func new(String name) super(name)
		setPersistable(false)
		
		component = ECBehaviorComponent.new(this, null)
		component.setCommonPath("/shareddata/models/empty.demodel",\
			"/shareddata/materials/empty.deskin",\
			"/shareddata/models/ghostCollision.derig")
		
		var ECComposeComponent ccomp = component.getComponent()
		ccomp.setLayerMask(LayerMask.newWith(GameApp.WorldLayerBit.remoteView))
		ccomp.getEnableGI().setValue(false)
		ccomp.getAffectsAudio().setValue(false)
		ccomp.getRenderEnvMap().setValue(false)
		
		collider = ECBehaviorCollider.new(this, component)
		collider.setGhost()
		
		dynamicSkin = ECBehaviorDynamicSkin.new(this, component)
		
		hideCondition = ECBHideCondition.new(this, null)
		visualizeInputDevice = ECBVisualizeInputDevice.new(this,\
			component, collider, dynamicSkin, hideCondition)
	end
	
	func ElementClass duplicateNamed(String classname)
		return VisualizeVRDeviceClass.new(classname)
	end
end
