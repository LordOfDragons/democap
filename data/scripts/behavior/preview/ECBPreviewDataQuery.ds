/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Behaviors

pin Democap.Characters

pin Dragengine.Gui
pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.Scenery
pin Dragengine.Utils


/**
 * Behavior adding support to query data which can not be retrieved otherwise.
 */
class ECBPreviewDataQuery extends DefaultECBehavior
	/** Data query interface. */
	interface DataQuery
		func Matrix getSlotMatrix(String name)
	end
	
	/** Behavior instance. */
	class Instance extends DefaultECBehaviorInstance
		var ECBPreviewDataQuery pECBehavior
		var DataQuery pDataQuery
		
		
		
		/** Create behavior instance. */
		func new(ECBPreviewDataQuery ecbehavior, BehaviorElement element) super(element)
			pECBehavior = ecbehavior
		end
		
		/** Dispose of widget. */
		func void dispose()
			pDataQuery = null
			super.dispose()
		end
		
		
		/** Data query or null. */
		func DataQuery getDataQuery()
			return pDataQuery
		end
		
		/** Set data query or null. */
		func void setDataQuery(DataQuery dataQuery)
			pDataQuery = dataQuery
		end
	end
	
	
	
	/** Create behavior and add it to element class. */
	func new(BehaviorElementClass eclass) super(eclass)
		eclass.addBehavior(this)
	end
	
	
	
	/** Get instance in element from owner element class. */
	func Instance instance( BehaviorElement element )
		return element.getInstanceAt(getInstanceIndex()) cast Instance
	end
	
	/** Get instance for element or null. */
	static func Instance getInstanceIn(BehaviorElement element)
		return element.findInstance(block Instance each
			return true
		end) cast Instance
	end
	
	/** Get behavior in element class or null if absent. */
	static func ECBPreviewDataQuery getBehaviorIn(BehaviorElementClass eclass)
		return eclass.findBehavior(block ECBPreviewDataQuery each
			return true
		end) cast ECBPreviewDataQuery
	end
	
	/** Create behavior instance. */
	func ECBehaviorInstance createInstance(BehaviorElement element)
		return Instance.new(this, element)
	end
end
