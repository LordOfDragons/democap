/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Behaviors

pin Dragengine.Scenery


/**
 * Base class for behaviors supporting interaction by operator or actor.
 */
class ECBInteractHandle extends DefaultECBehavior
	/** Behavior instance. */
	class Instance extends DefaultECBehaviorInstance
		/** Create behavior instance. */
		public func new(BehaviorElement element) super(element)
		end
		
		
		/** Start interacting. */
		public func void startInteract(Matrix viewMatrix, DVector rayOrigin, Vector rayDirection, DVector hitPoint)
		end
		
		/** Start interacting. */
		public func void startInteract(ECBehaviorVRHandPointAt.Instance pointAt)
			var DVector hitPoint = pointAt.getPointAtHitPoint()
			if hitPoint == null
				return
			end
			
			var DVector rayOrigin = pointAt.getPointAtOrigin()
			var Vector rayDirection = pointAt.getPointAtDirection().toVector().normalize()
			var Matrix viewMatrix = pointAt.calcTestMatrix().getRotation().toMatrix()
			
			startInteract(viewMatrix, rayOrigin, rayDirection, hitPoint)
		end
		
		/** Update interacting. */
		public func void updateInteract(Matrix viewMatrix, DVector rayOrigin, Vector rayDirection)
		end
		
		/** Update interacting. */
		public func void updateInteract(ECBehaviorVRHandPointAt.Instance pointAt)
			var DMatrix matrix = pointAt.calcTestMatrix()
			
			var DVector rayOrigin = matrix.getPosition()
			var Vector rayDirection = matrix.getViewVector().toVector()
			var Matrix viewMatrix = matrix.getRotation().toMatrix()
			
			updateInteract(viewMatrix, rayOrigin, rayDirection)
		end
		
		/** Stop interacting. */
		public func void stopInteract()
		end
	end
	
	
	/** Create behavior and add it to element class. */
	public func new(BehaviorElementClass eclass) super(eclass)
	end
	
	
	/** Get instance in element from owner element class. */
	public func Instance instance(BehaviorElement element)
		return element.getInstanceAt(getInstanceIndex()) cast Instance
	end
	
	/** Get behavior in element class or null if absent. */
	static public func ECBInteractHandle getBehaviorIn(BehaviorElementClass eclass)
		return eclass.findBehavior(block ECBInteractHandle each
			return true
		end) cast ECBInteractHandle
	end
	
	/** Get instance in element or null if absent. */
	static public func Instance getInstanceIn(BehaviorElement element)
		return element.findInstance(block Instance each
			return true
		end) cast Instance
	end
	
	
	/** Create behavior instance. */
	public func ECBehaviorInstance createInstance(BehaviorElement element)
		return Instance.new(element)
	end
end
