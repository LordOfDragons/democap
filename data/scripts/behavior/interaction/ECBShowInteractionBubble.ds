/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Behaviors

pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.Scenery
pin Dragengine.Utils


/**
 * Behavior showing interaction bubble.
 */
class ECBShowInteractionBubble extends DefaultECBehavior
	/** Behavior instance. */
	class Instance extends DefaultECBehaviorInstance
		private var ECBShowInteractionBubble pECBehavior
		private var ElementClass pBubbleClass
		private var ECBInteractionBubble.Instance pBubble
		private var Array pButtons
		
		
		
		/** Create behavior instance. */
		public func new(ECBShowInteractionBubble ecbehavior, BehaviorElement element) super(element)
			pECBehavior = ecbehavior
			pButtons = Array.new()
		end
		
		/** Dispose of behavior instance. */
		public func void dispose()
			disposeBubble()
			pButtons = null
			super.dispose()
		end
		
		/** Init behavior instance. */
		public func void init(StubElement stub)
			var CodecPropertyString codec = getElement().getClass().getCodecPropertyString()
			
			pButtons = pECBehavior.buttons.getList(stub, codec)
			pBubbleClass = pECBehavior.bubbleClass.getElementClass(stub)
		end
		
		
		
		/** Behavior. */
		public func ECBShowInteractionBubble getECBehavior()
			return pECBehavior
		end
		
		
		
		/** State changed for example visibility. */
		public func void stateChanged()
			if pBubble != null
				pBubble.updateVisibility()
			end
		end
		
		/** Added to game world. */
		public func void addToGameWorld()
			if pBubble == null
				createBubble()
			end
		end
		
		/** Remove from game world. */
		public func void removeFromGameWorld()
			disposeBubble()
		end
		
		
		
		/** Create bubble adding it to game world. */
		protected func void createBubble()
			if pBubbleClass == null
				return
			end
			
			var BehaviorElement element = getElement()
			
			var StubElement stub = StubElement.new(pBubbleClass) // no generated ID on purpose
			var BehaviorElement bubble = stub.createElement() cast BehaviorElement
			
			element.getGameWorld().addElement(bubble)
			bubble.attachToParent(element)
			
			createButtons()
			
			pBubble = ECBInteractionBubble.getInstanceIn(bubble)
		end
		
		protected func void createButtons()
			pButtons.forEach(block String buttonType
				
			end)
		end
		
		protected func void disposeBubble()
			if pBubble != null
				if pBubble.getElement() != null // could be disposed already
					pBubble.getElement().safeDispose()
				end
				pBubble = null
			end
			pBubbleClass = null
		end
	end
	
	
	
	public var ECPStringList buttons
	public var ECPElementClass bubbleClass
	
	
	
	/** Create behavior and add it to element class. */
	public func new(BehaviorElementClass eclass) super(eclass)
		var String prefix = "showInteractionBubble."
		
		buttons = ECPStringList.new(prefix + "buttons")
		eclass.addProperty(buttons)
		
		bubbleClass = ECPElementClass.new(prefix + "class",\
			GameApp.getGameApp().getElementClassList(), "InteractionBubble")
		eclass.addProperty(bubbleClass)
		
		eclass.addBehavior(this)
	end
	
	/** Dispose of behavior. */
	public func void dispose()
		buttons = null
		bubbleClass = null
		super.dispose()
	end
	
	
	
	/** Get instance in element from owner element class. */
	public func Instance instance(BehaviorElement element)
		return element.getInstanceAt(getInstanceIndex()) cast Instance
	end
	
	/** Get behavior in element class or null if absent. */
	static public func ECBShowInteractionBubble getBehaviorIn(BehaviorElementClass eclass)
		return eclass.findBehavior(block ECBShowInteractionBubble each
			return true
		end) cast ECBShowInteractionBubble
	end
	
	/** Get instance in element or null if absent. */
	static public func Instance getInstanceIn(BehaviorElement element)
		return element.findInstance(block Instance each
			return true
		end) cast Instance
	end
	
	
	
	/** Create behavior instance. */
	public func ECBehaviorInstance createInstance(BehaviorElement element)
		return Instance.new(this, element)
	end
end
