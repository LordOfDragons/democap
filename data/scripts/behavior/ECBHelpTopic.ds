/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2022, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Behaviors

pin Dragengine.Scenery


/**
 * Behavior adding support to define help topic.
 * 
 * \see https://developer.dragondreams.ch/wiki/doku.php/democap:behavior_ecbhelptopic
 */
class ECBHelpTopic extends DefaultECBehavior
	/**
	 * Behavior factory.
	 * 
	 * Example XML element class:
	 * \code{.xml}
	 * <behavior type='ECBHelpTopic'>
	 *   <string name='.topic'>wiki_page_id</string>
	 * </behavior>
	 * \endcode
	 */
	class Factory implements BehaviorFactory
		func new()
		end
		
		func String factoryId()
			return "ECBHelpTopic"
		end
		
		func ECBehavior addBehavior(BehaviorElementClass eclass, String id, Dictionary parameters)
			if not id.empty()
				throw EInvalidParam.new("id is not empty string")
			end
			var ECBHelpTopic behavior = ECBHelpTopic.new(eclass)
			BehaviorElementClass.sharedFactoryHelper.setPropertiesFromParameters(eclass, parameters, "helpTopic")
			return behavior
		end
	end
	
	/** Behavior instance. */
	class Instance extends DefaultECBehaviorInstance
		var ECBHelpTopic pECBehavior
		
		
		/** Create behavior instance. */
		func new(ECBHelpTopic ecbehavior, BehaviorElement element) super(element)
			pECBehavior = ecbehavior
		end
		
		
		/** Help topic. */
		func String getHelpTopic()
			return pECBehavior.getHelpTopic().getValue()
		end
	end
	
	
	var ECPString pHelpTopic
	
	
	/** Create behavior and add it to element class. */
	func new(BehaviorElementClass eclass) super(eclass)
		pHelpTopic = ECPString.new("helpTopic.topic", "")
		eclass.addProperty(pHelpTopic)
		
		eclass.addBehavior(this)
	end
	
	
	/** Help topic. */
	func ECPString getHelpTopic()
		return pHelpTopic
	end
	
	
	/** Get instance in element from owner element class. */
	func Instance instance(BehaviorElement element)
		return element.getInstanceAt(this.getInstanceIndex()) cast Instance
	end
	
	/** Get instance with slot name in element or null if absent. */
	static func Instance getInstanceIn(BehaviorElement element)
		return element.findInstance(block Instance each
			return true
		end) cast Instance
	end
	
	
	/** Create behavior instance. */
	func ECBehaviorInstance createInstance(BehaviorElement element)
		return Instance.new(this, element)
	end
end
