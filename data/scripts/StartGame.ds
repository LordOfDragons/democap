/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap

pin Dragengine.CameraDirectors
pin Dragengine.Gui
pin Dragengine.Scenery



/**
 * Start game loader class.
 */
class StartGame extends WindowGameWorld.Loader
	/** Create start game loader. */
	public func new(WindowGameWorld window, String pathWorld) super(window)
		setPathWorld(pathWorld)
	end
	
	
	
	/** Create loading window. */
	protected func void createLoadingWindow()
		super.createLoadingWindow()
		
		// the base class implementation activates the desktop input processor.
		// revert back to our split input processor
		GameApp.getGameApp().setSplitInputProcessor()
	end
	
	/** Loading world finished successfully. */
	public func void onLoadWorldFinished()
		var GameApp app = BaseGameApp.getApp() cast GameApp
		
		// assign camera director attaching the camera to the player controlled actor
		var VRCameraDirector director = VRCameraDirector.new()
		director.setViewDistance(300)
		director.setLowestIntensity(20)
		director.setHighestIntensity(20)
		director.setAdaptionTime(30)
		getWindow().setCameraDirector(director)
		
		director.getCamera().setPosition(DVector.new(0, 1, 1))
		director.getCamera().setOrientation(Quaternion.newFromEulerY(180))
		
		// finish loading
		super.onLoadWorldFinished()
		
		app.finishLoadGameWorld()
	end
	
	/** Loading world failed. */
	public func void onLoadWorldFailed()
		super.onLoadWorldFailed()
		BaseGameApp.getApp().cancelLoadGameWorld()
	end
end
