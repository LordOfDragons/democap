/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Gui

pin Democap.Actors
pin Democap.Actions
pin Democap.Behaviors
pin Democap.Characters
pin Democap.Worlds

pin Dragengine.Gui.Layouts
pin Dragengine.Gui.Events
pin Dragengine.Preloading
pin Dragengine.Scenery



/**
 * ECBComponent panel.
 */
class WMPSOComponent extends WMPPanelSceneObject
	protected var ECBComponent.Instance pBehaviorComponent
	protected var DefaultTextModel pModelPathModel
	protected var DefaultTextModel pModelPathSkin
	protected var DefaultTextModel pModelPathRig
	protected var DefaultTextModel pModelPathOcclusionMesh
	protected var DefaultTextModel pModelPathAudioModel
	
	
	
	/** Create panel. */
	func new(WMPanelProject panelProject, String bgpTypeId, String behaviorId)\
	super(panelProject, bgpTypeId, behaviorId, "@UI.Component", "WMPSOComponent", "ppob_component")
		pModelPathModel = DefaultTextModel.new()
		pModelPathSkin = DefaultTextModel.new()
		pModelPathRig = DefaultTextModel.new()
		pModelPathOcclusionMesh = DefaultTextModel.new()
		pModelPathAudioModel = DefaultTextModel.new()
		
		getPanelContent().runWhileBlockingLayout(block
			createContent(getPanelContent())
		end)
	end
	
	/** Dispose of widget. */
	func void dispose()
		setBehavior(null)
		
		pModelPathModel = null
		pModelPathSkin = null
		pModelPathRig = null
		pModelPathOcclusionMesh = null
		pModelPathAudioModel = null
		super.dispose()
	end
	
	/** Update behavior. */
	func void updateBehavior()
		if pBehaviorComponent == null
			return
		end
		
		runWhileBlockingLayout(block
			pModelPathModel.setText(pBehaviorComponent.getPathModel())
			pModelPathSkin.setText(pBehaviorComponent.getPathSkin())
			pModelPathRig.setText(pBehaviorComponent.getPathRig())
			pModelPathOcclusionMesh.setText(pBehaviorComponent.getPathOcclusionMesh())
			pModelPathAudioModel.setText(pBehaviorComponent.getPathAudioModel())
		end)
	end
	
	
	
	/** Create panel content. */
	protected func void createContent(Panel content)
		var String startDirectory = GameApp.getGameApp().getPathObjects()
		var EditPath editPath
		
		content.setLayout(FlowLayout.new(LayoutAxis.y, 2))
		
		content.addWidget(Panel.new(FormLayout.new(true, 5, 2), block Panel p
			// path model resource
			p.addWidget(Label.new("@UI.Model.Label", "Label.FormCaption.SingleLine"))
			
			editPath = EditPath.new(pModelPathModel, ResourceLoaderType.model, startDirectory)
			editPath.setToolTip("@UI.ToolTip.Model")
			p.addWidget(editPath)
			editPath.addActionListener(BlockActionListener.new(block ActionEvent event
				if pBehaviorComponent.setPathModel(pModelPathModel.getText())
					notifyStubChanged()
				end
			end))
			
			// path skin resource
			p.addWidget(Label.new("@UI.Skin.Label", "Label.FormCaption.SingleLine"))
			
			editPath = EditPath.new(pModelPathSkin, ResourceLoaderType.skin, startDirectory)
			editPath.setToolTip("@UI.ToolTip.Skin")
			p.addWidget(editPath)
			editPath.addActionListener(BlockActionListener.new(block ActionEvent event
				if pBehaviorComponent.setPathSkin(pModelPathSkin.getText())
					notifyStubChanged()
				end
			end))
			
			// path rig resource
			p.addWidget(Label.new("@UI.Rig.Label", "Label.FormCaption.SingleLine"))
			
			editPath = EditPath.new(pModelPathRig, ResourceLoaderType.rig, startDirectory)
			editPath.setToolTip("@UI.ToolTip.Rig")
			p.addWidget(editPath)
			editPath.addActionListener(BlockActionListener.new(block ActionEvent event
				if pBehaviorComponent.setPathRig(pModelPathRig.getText())
					notifyStubChanged()
				end
			end))
			
			// path occlusion mesh resource
			p.addWidget(Label.new("@UI.Occlusion.Label", "Label.FormCaption.SingleLine"))
			
			editPath = EditPath.new(pModelPathOcclusionMesh, ResourceLoaderType.occlusionMesh, startDirectory)
			editPath.setToolTip("@UI.ToolTip.Occlusion")
			p.addWidget(editPath)
			editPath.addActionListener(BlockActionListener.new(block ActionEvent event
				if pBehaviorComponent.setPathOcclusionMesh(pModelPathOcclusionMesh.getText())
					notifyStubChanged()
				end
			end))
			
			// path audio model resource
			p.addWidget(Label.new("@UI.AudioModel.Label", "Label.FormCaption.SingleLine"))
			
			editPath = EditPath.new(pModelPathAudioModel, ResourceLoaderType.model, startDirectory)
			editPath.setToolTip("@UI.ToolTip.AudioModel")
			p.addWidget(editPath)
			editPath.addActionListener(BlockActionListener.new(block ActionEvent event
				if pBehaviorComponent.setPathAudioModel(pModelPathAudioModel.getText())
					notifyStubChanged()
				end
			end))
		end))
	end
	
	protected func void onBehaviorChanged()
		pBehaviorComponent = pBehavior cast ECBComponent.Instance
	end
end
