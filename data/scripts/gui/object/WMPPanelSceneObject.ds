/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Gui

pin Democap.Behaviors

pin Dragengine.Gui.Layouts
pin Dragengine.Gui.Events
pin Dragengine.Preloading
pin Dragengine.Scenery
pin Dragengine.Utils



/**
 * Scene object panel.
 */
class WMPPanelSceneObject extends CollapsibleGroup
	protected var WMPanelProject pPanelProject
	protected var String pBGPTypeId
	protected var ECBehaviorInstance pBehavior
	protected var String pPrefixUIOptions
	
	
	
	/** Create panel. */
	func new(WMPanelProject panelProject, String bgpTypeId, String behaviorId, String label, String settingsName, String helpUrl)\
		super(behaviorId.empty() if label else TranslationManager.get()\
			.translateIf(UnicodeString.newFromUTF8(label), '@').toUTF8() + ": " + behaviorId,\
			helpUrl, CollapsibleGroup.persistModel(prefixUIOptions(panelProject, behaviorId, settingsName)))
		pPanelProject = panelProject
		pBGPTypeId = bgpTypeId
		pPrefixUIOptions = prefixUIOptions(panelProject, behaviorId, settingsName)
	end
	
	/** Dispose of widget. */
	func void dispose()
		pBehavior = null
		pPanelProject = null
		super.dispose()
	end
	
	/** UI options prefix. */
	static func String prefixUIOptions(WMPanelProject panelProject, String behaviorId, String settingsName)
		var String prefix = panelProject.getPrefixUIOptions() + "/" + settingsName
		if not behaviorId.empty()
			prefix = prefix + "(" + behaviorId + ")"
		end
		return prefix
	end
	
	
	
	/** Parent project panel. */
	func WMPanelProject getPanelProject()
		return pPanelProject
	end
	
	/** Behavior Gui Panel Type ID. */
	func String getBGPTypeId()
		return pBGPTypeId
	end
	
	/** Prefix UI Options. */
	func String getPrefixUIOptions()
		return pPrefixUIOptions
	end
	
	/** Behavior instance or null. */
	func ECBehaviorInstance getBehavior()
		return pBehavior
	end
	
	/** Set behavior instance or null. */
	func void setBehavior(ECBehaviorInstance behavior)
		if behavior == pBehavior
			return
		end
		
		pBehavior = behavior
		onBehaviorChanged()
		updateBehavior()
	end
	
	/** Update behavior. */
	func void updateBehavior()
	end
	
	/** Notify element stub changed. */
	func void notifyStubChanged()
		pPanelProject.elementStubChanged()
	end
	
	
	
	/** Behavior instance changed. */
	protected func void onBehaviorChanged()
	end
end
