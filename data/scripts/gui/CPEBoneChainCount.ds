/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Gui

pin Democap.Behaviors

pin Dragengine.Gui.Events
pin Dragengine.Gui.Layouts
pin Dragengine.Scenery
pin Dragengine.Utils.StyledText.Definition
pin Dragengine.Utils.StyledText.Definition.Nodes


/**
 * Character preview editor to select a bone chain. Same as CPEBone but uses also the bone
 * count to mark the length of the chain. The chain length can not be edited directly.
 */
class CPEBoneChainCount extends CPEBone
	protected var Label pLabelBoneCount
	protected var TextField pEditBoneCount
	
	
	
	/** Create character preview editor. */
	public func new(WidgetCharacterPreview preview, Label labelBone, ComboBox cbBone,\
	Label labelBoneCount, TextField editBoneCount) super(preview, labelBone, cbBone)
		if labelBoneCount == null
			throw ENullPointer.new("labelBoneCount")
		end
		if editBoneCount == null
			throw ENullPointer.new("editBoneCount")
		end
		
		pLabelBoneCount = labelBoneCount
		pEditBoneCount = editBoneCount
		
		labelBoneCount.addMouseListener(ClickedActivateEditor.new(this, editBoneCount))
		
		editBoneCount.addFocusListener(ReceiveFocusActivateEditor.new(this))
		editBoneCount.getModel().addListener(UpdateOnTextChanged.new(this))
	end
	
	
	
	/** Edit bone count. */
	public func TextField getEditBoneCount()
		return pEditBoneCount
	end
	
	
	
	/** Editor has been activated. */
	public func void onActivate()
		super.onActivate()
		
		pLabelBoneCount.setDesignerSelector("Label.FormCaption.Hilight")
	end
	
	/** Editor has been deactivated. */
	public func void onDeactivate()
		super.onDeactivate()
		
		pLabelBoneCount.setDesignerSelector("Label.FormCaption")
	end
	
	
	
	/** Update preview bone colors. */
	protected func void updateBoneColors()
		var ECBPreviewBones.Instance bones = getPreviewBones()
		if bones == null
			return
		end
		
		bones.setAllBoneColor(previewBoneColorDefault)
		
		if pCBBone.getEditor() == null
			return
		end
		
		var String selected = pCBBone.getEditor().getEditorValue() cast String
		if selected == null
			return
		end
		
		bones.setBoneColor(selected, previewBoneColorSelected)
		
		var int boneCount = pEditBoneCount.getText().toInt()
		if boneCount < 2
			return
		end
		
		var Rig rig = bones.getComponent().getComponent().getRig()
		var int bone = rig.indexOfBoneNamed(selected)
		if bone == -1
			return
		end
		
		bone = rig.boneGetParent(bone) // top of chain is colored already
		boneCount--
		
		while boneCount > 0 and bone != -1
			bones.setBoneColor(rig.boneGetName(bone), previewBoneColorChain)
			bone = rig.boneGetParent(bone)
			boneCount--
		end
	end
end
