/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Gui

pin Dragengine.Gui.Layouts
pin Dragengine.Gui.Events
pin Dragengine.Scenery


/**
 * Group panel. Group header shows text.
 */
class StaticGroup extends Panel
	var Label pLabel
	var Panel pPanelHeader
	var Panel pPanelContent
	
	
	/** Create widget. */
	func new(String label, String helpTopic)
		if label == null
			throw ENullPointer.new("label")
		end
		
		runWhileBlockingLayout(block
			setLayout(BorderLayout.new())
			
			pPanelHeader = Panel.new(BorderLayout.new(5), block Panel p
				pLabel = Label.new(label)
				p.addWidget(pLabel, BorderLayout.Area.content)
				
				if not helpTopic.empty()
					p.addWidget(HelpButton.new(helpTopic), BorderLayout.Area.right)
				end
			end)
			addWidget(pPanelHeader, BorderLayout.Area.top)
			
			pPanelContent = Panel.new(FlowLayout.new(LayoutAxis.y))
			addWidget(pPanelContent, BorderLayout.Area.content)
			
			setDesignerSelector("CollapsibleGroup")
		end)
	end
	
	/** Create widget. */
	func new(String label, String helpUrl, Layout layout, Block addContent) this(label, helpUrl)
		pPanelContent.runWhileBlockingLayout(block
			pPanelContent.setLayout(layout)
			addContent.run(pPanelContent)
		end)
	end
	
	/** Dispose of window. */
	func void dispose()
		pLabel = null
		pPanelHeader = null
		pPanelContent = null
		
		super.dispose()
	end
	
	
	/** Label. */
	func Label getLabel()
		return pLabel
	end
	
	/** Header panel. */
	func Panel getPanelHeader()
		return pPanelHeader
	end
	
	/** Content panel. */
	func Panel getPanelContent()
		return pPanelContent
	end
	
	
	/** Set designer selector. */
	func void setDesignerSelector(String selector)
		super.setDesignerSelector(selector)
		pPanelHeader.setDesignerSelector("Panel." + selector + ".Header")
		pLabel.setDesignerSelector("Label." + selector)
		pPanelContent.setDesignerSelector("Panel." + selector + ".Content")
	end
end
