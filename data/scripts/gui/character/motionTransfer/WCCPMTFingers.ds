/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Gui

pin Democap.Behaviors
pin Democap.Characters
pin Democap.MotionTransferSystem

pin Dragengine.Gui.Layouts
pin Dragengine.Gui.Events
pin Dragengine.Scenery


/**
 * Edit character config window motion transfer fingers panel.
 */
class WCCPMTFingers extends WCCPanelMotionTransfer
	private var DefaultListModel pModelListThumbTipBone
	private var DefaultTextModel pModelTextThumbTipBone
	private var DefaultListModel pModelListThumbBaseBone
	private var DefaultTextModel pModelTextThumbBaseBone
	
	private var DefaultListModel pModelListIndexTipBone
	private var DefaultTextModel pModelTextIndexTipBone
	private var DefaultListModel pModelListIndexBaseBone
	private var DefaultTextModel pModelTextIndexBaseBone
	
	private var DefaultListModel pModelListMiddleTipBone
	private var DefaultTextModel pModelTextMiddleTipBone
	private var DefaultListModel pModelListMiddleBaseBone
	private var DefaultTextModel pModelTextMiddleBaseBone
	
	private var DefaultListModel pModelListRingTipBone
	private var DefaultTextModel pModelTextRingTipBone
	private var DefaultListModel pModelListRingBaseBone
	private var DefaultTextModel pModelTextRingBaseBone
	
	private var DefaultListModel pModelListPinkyTipBone
	private var DefaultTextModel pModelTextPinkyTipBone
	private var DefaultListModel pModelListPinkyBaseBone
	private var DefaultTextModel pModelTextPinkyBaseBone
	
	private var DefaultListModel pModelListTrackerSlot
	private var DefaultTextModel pModelTextTrackerSlot
	private var DefaultTextModel pModelBendAngle
	private var DefaultListModel pModelListMoveHandsClosed
	private var DefaultTextModel pModelTextMoveHandsClosed
	
	
	
	/** Create window. */
	public func new(WindowCharacterConfiguration window) super(window)
		pModelTypeName.setText("Fingers")
		
		pModelListThumbTipBone = DefaultListModel.new()
		pModelListThumbTipBone.setAutoSelect(false)
		pModelTextThumbTipBone = DefaultTextModel.new()
		pModelListThumbBaseBone = DefaultListModel.new()
		pModelListThumbBaseBone.setAutoSelect(false)
		pModelTextThumbBaseBone = DefaultTextModel.new()
		
		pModelListIndexTipBone = DefaultListModel.new()
		pModelListIndexTipBone.setAutoSelect(false)
		pModelTextIndexTipBone = DefaultTextModel.new()
		pModelListIndexBaseBone = DefaultListModel.new()
		pModelListIndexBaseBone.setAutoSelect(false)
		pModelTextIndexBaseBone = DefaultTextModel.new()
		
		pModelListMiddleTipBone = DefaultListModel.new()
		pModelListMiddleTipBone.setAutoSelect(false)
		pModelTextMiddleTipBone = DefaultTextModel.new()
		pModelListMiddleBaseBone = DefaultListModel.new()
		pModelListMiddleBaseBone.setAutoSelect(false)
		pModelTextMiddleBaseBone = DefaultTextModel.new()
		
		pModelListRingTipBone = DefaultListModel.new()
		pModelListRingTipBone.setAutoSelect(false)
		pModelTextRingTipBone = DefaultTextModel.new()
		pModelListRingBaseBone = DefaultListModel.new()
		pModelListRingBaseBone.setAutoSelect(false)
		pModelTextRingBaseBone = DefaultTextModel.new()
		
		pModelListPinkyTipBone = DefaultListModel.new()
		pModelListPinkyTipBone.setAutoSelect(false)
		pModelTextPinkyTipBone = DefaultTextModel.new()
		pModelListPinkyBaseBone = DefaultListModel.new()
		pModelListPinkyBaseBone.setAutoSelect(false)
		pModelTextPinkyBaseBone = DefaultTextModel.new()
		
		pModelListTrackerSlot = DefaultListModel.new()
		pModelListTrackerSlot.setAutoSelect(false)
		pModelTextTrackerSlot = DefaultTextModel.new()
		pModelBendAngle = DefaultTextModel.new()
		pModelListMoveHandsClosed = DefaultListModel.new()
		pModelListMoveHandsClosed.setAutoSelect(false)
		pModelTextMoveHandsClosed = DefaultTextModel.new()
		
		runWhileBlockingLayout(block
			createContent()
		end)
	end
	
	/** Dispose of window. */
	public func void dispose()
		pModelListThumbTipBone = null
		pModelTextThumbTipBone = null
		pModelListThumbBaseBone = null
		pModelTextThumbBaseBone = null
		
		pModelListIndexTipBone = null
		pModelTextIndexTipBone = null
		pModelListIndexBaseBone = null
		pModelTextIndexBaseBone = null
		
		pModelListMiddleTipBone = null
		pModelTextMiddleTipBone = null
		pModelListMiddleBaseBone = null
		pModelTextMiddleBaseBone = null
		
		pModelListRingTipBone = null
		pModelTextRingTipBone = null
		pModelListRingBaseBone = null
		pModelTextRingBaseBone = null
		
		pModelListPinkyTipBone = null
		pModelTextPinkyTipBone = null
		pModelListPinkyBaseBone = null
		pModelTextPinkyBaseBone = null
		
		pModelListTrackerSlot = null
		pModelTextTrackerSlot = null
		pModelBendAngle = null
		pModelListMoveHandsClosed = null
		pModelTextMoveHandsClosed = null
		super.dispose()
	end
	
	
	
	/** Load values from tracker slot object if present into edit widgets. */
	public func void loadValues()
		runWhileBlockingLayout(block
			super.loadValues()
			
			if pMotionTransfer != null
				var MotionTransferFingers mt = pMotionTransfer cast MotionTransferFingers
				pModelTextThumbTipBone.setText(mt.getThumbTipBone())
				pModelTextThumbBaseBone.setText(mt.getThumbBaseBone())
				pModelTextIndexTipBone.setText(mt.getIndexTipBone())
				pModelTextIndexBaseBone.setText(mt.getIndexBaseBone())
				pModelTextMiddleTipBone.setText(mt.getMiddleTipBone())
				pModelTextMiddleBaseBone.setText(mt.getMiddleBaseBone())
				pModelTextRingTipBone.setText(mt.getRingTipBone())
				pModelTextRingBaseBone.setText(mt.getRingBaseBone())
				pModelTextPinkyTipBone.setText(mt.getPinkyTipBone())
				pModelTextPinkyBaseBone.setText(mt.getPinkyBaseBone())
				pModelTextTrackerSlot.setText(mt.getTracker())
				pModelBendAngle.setText(mt.getBendAngle().toString())
				pModelTextMoveHandsClosed.setText(mt.getMoveHandsClosed())
				
			else
				pModelTextThumbTipBone.setText("")
				pModelTextThumbBaseBone.setText("")
				pModelTextIndexTipBone.setText("")
				pModelTextIndexBaseBone.setText("")
				pModelTextMiddleTipBone.setText("")
				pModelTextMiddleBaseBone.setText("")
				pModelTextRingTipBone.setText("")
				pModelTextRingBaseBone.setText("")
				pModelTextPinkyTipBone.setText("")
				pModelTextPinkyBaseBone.setText("")
				pModelTextTrackerSlot.setText("")
				pModelBendAngle.setText("")
				pModelTextMoveHandsClosed.setText("")
			end
		end)
		doLayoutIfBlocked()
	end
	
	/** Save value from edit widgets to tracker slot object if present. */
	public func void saveValues()
		if pMotionTransfer == null
			return
		end
		super.saveValues()
		
		var MotionTransferFingers mt = pMotionTransfer cast MotionTransferFingers
		mt.setThumbTipBone(pModelTextThumbTipBone.getText())
		mt.setThumbBaseBone(pModelTextThumbBaseBone.getText())
		mt.setIndexTipBone(pModelTextIndexTipBone.getText())
		mt.setIndexBaseBone(pModelTextIndexBaseBone.getText())
		mt.setMiddleTipBone(pModelTextMiddleTipBone.getText())
		mt.setMiddleBaseBone(pModelTextMiddleBaseBone.getText())
		mt.setRingTipBone(pModelTextRingTipBone.getText())
		mt.setRingBaseBone(pModelTextRingBaseBone.getText())
		mt.setPinkyTipBone(pModelTextPinkyTipBone.getText())
		mt.setPinkyBaseBone(pModelTextPinkyBaseBone.getText())
		mt.setTracker(pModelTextTrackerSlot.getText())
		mt.setBendAngle(pModelBendAngle.getText().toFloat())
		mt.setMoveHandsClosed(pModelTextMoveHandsClosed.getText())
	end
	
	/** Supports motion transfer type. */
	public func bool supports(MotionTransfer motionTranfer)
		return motionTranfer castable MotionTransferFingers
	end
	
	
	
	/** Create window content. */
	protected func void createContent()
		var WidgetCharacterPreview preview = pWindowCharacterConfiguration.getCharacterPreview()
		var ComboBox comboBox, comboBoxTip, comboBoxBase
		var Label label, labelTip, labelBase
		var TextField textField
		var Button button
		var ListBox listBox
		
		createBaseContent("motiontransferfingers")
		
		// thumb bone chain
		labelTip = Label.new("Thumb Tip Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelTip)
		
		comboBoxTip = ComboBox.new(pModelListThumbTipBone, DefaultComboBoxEditor.new(pModelTextThumbTipBone))
		comboBoxTip.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxTip.setToolTip("Tip of thumb bone chain.")
		pPanelForm.addWidget(comboBoxTip)
		
		labelBase = Label.new("Thumb Base Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelBase)
		
		comboBoxBase = ComboBox.new(pModelListThumbBaseBone, DefaultComboBoxEditor.new(pModelTextThumbBaseBone))
		comboBoxBase.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxBase.setToolTip("Base of thumb bone chain.")
		pPanelForm.addWidget(comboBoxBase)
		
		CPEBoneChain.new(preview, labelTip, comboBoxTip, null, comboBoxBase, false)
		CPEBoneChain.new(preview, null, comboBoxTip, labelBase, comboBoxBase, true)
		
		// index bone chain
		labelTip = Label.new("Index Tip Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelTip)
		
		comboBoxTip = ComboBox.new(pModelListIndexTipBone, DefaultComboBoxEditor.new(pModelTextIndexTipBone))
		comboBoxTip.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxTip.setToolTip("Tip of index bone chain.")
		pPanelForm.addWidget(comboBoxTip)
		
		labelBase = Label.new("Index Base Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelBase)
		
		comboBoxBase = ComboBox.new(pModelListIndexBaseBone, DefaultComboBoxEditor.new(pModelTextIndexBaseBone))
		comboBoxBase.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxBase.setToolTip("Base of index bone chain.")
		pPanelForm.addWidget(comboBoxBase)
		
		CPEBoneChain.new(preview, labelTip, comboBoxTip, null, comboBoxBase, false)
		CPEBoneChain.new(preview, null, comboBoxTip, labelBase, comboBoxBase, true)
		
		// middle bone chain
		labelTip = Label.new("Middle Tip Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelTip)
		
		comboBoxTip = ComboBox.new(pModelListMiddleTipBone, DefaultComboBoxEditor.new(pModelTextMiddleTipBone))
		comboBoxTip.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxTip.setToolTip("Tip of middle bone chain.")
		pPanelForm.addWidget(comboBoxTip)
		
		labelBase = Label.new("Middle Base Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelBase)
		
		comboBoxBase = ComboBox.new(pModelListMiddleBaseBone, DefaultComboBoxEditor.new(pModelTextMiddleBaseBone))
		comboBoxBase.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxBase.setToolTip("Base of middle bone chain.")
		pPanelForm.addWidget(comboBoxBase)
		
		CPEBoneChain.new(preview, labelTip, comboBoxTip, null, comboBoxBase, false)
		CPEBoneChain.new(preview, null, comboBoxTip, labelBase, comboBoxBase, true)
		
		// ring bone chain
		labelTip = Label.new("Ring Tip Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelTip)
		
		comboBoxTip = ComboBox.new(pModelListRingTipBone, DefaultComboBoxEditor.new(pModelTextRingTipBone))
		comboBoxTip.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxTip.setToolTip("Tip of ring bone chain.")
		pPanelForm.addWidget(comboBoxTip)
		
		labelBase = Label.new("Ring Base Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelBase)
		
		comboBoxBase = ComboBox.new(pModelListRingBaseBone, DefaultComboBoxEditor.new(pModelTextRingBaseBone))
		comboBoxBase.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxBase.setToolTip("Base of ring bone chain.")
		pPanelForm.addWidget(comboBoxBase)
		
		CPEBoneChain.new(preview, labelTip, comboBoxTip, null, comboBoxBase, false)
		CPEBoneChain.new(preview, null, comboBoxTip, labelBase, comboBoxBase, true)
		
		// pinky bone chain
		labelTip = Label.new("Pinky Tip Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelTip)
		
		comboBoxTip = ComboBox.new(pModelListPinkyTipBone, DefaultComboBoxEditor.new(pModelTextPinkyTipBone))
		comboBoxTip.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxTip.setToolTip("Tip of pinky bone chain.")
		pPanelForm.addWidget(comboBoxTip)
		
		labelBase = Label.new("Pinky Base Bone:", "Label.FormCaption")
		pPanelForm.addWidget(labelBase)
		
		comboBoxBase = ComboBox.new(pModelListPinkyBaseBone, DefaultComboBoxEditor.new(pModelTextPinkyBaseBone))
		comboBoxBase.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBoxBase.setToolTip("Base of pinky bone chain.")
		pPanelForm.addWidget(comboBoxBase)
		
		CPEBoneChain.new(preview, labelTip, comboBoxTip, null, comboBoxBase, false)
		CPEBoneChain.new(preview, null, comboBoxTip, labelBase, comboBoxBase, true)
		
		// tracker slot
		pPanelForm.addWidget(Label.new("Tracker Slot:", "Label.FormCaption"))
		
		comboBox = ComboBox.new(pModelListTrackerSlot, DefaultComboBoxEditor.new(pModelTextTrackerSlot))
		comboBox.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBox.setToolTip("Tracker slot to use. Requires an attached VR controller supporting finger input.")
		pPanelForm.addWidget(comboBox)
		
		// bend angle
		pPanelForm.addWidget(Label.new("Bend Angle:", "Label.FormCaption"))
		
		textField = TextField.new(pModelBendAngle, 6)
		textField.setDesignerSelector("TextField.WindowCharacterConfiguration")
		textField.setValidator(SimpleTextValidator.new(10, SimpleTextValidator.CharacterClass.number))
		textField.setToolTip("Finger bending angle in degrees. Applied to each individual finger segment.")
		pPanelForm.addWidget(textField)
		
		// move
		pPanelForm.addWidget(Label.new("Move Hands Closed:", "Label.FormCaption"))
		
		comboBox = ComboBox.new(pModelListMoveHandsClosed, DefaultComboBoxEditor.new(pModelTextMoveHandsClosed))
		comboBox.setDesignerSelector("ComboBox.WindowCharacterConfiguration")
		comboBox.setToolTip("Animation move to use instead of Bend Angle. Move defines the curled finger position.")
		pPanelForm.addWidget(comboBox)
	end
	
	/** Update bone lists. */
	public func void updateBoneLists(Array bones)
		pModelListThumbTipBone.setContent(bones)
		pModelListThumbBaseBone.setContent(bones)
		pModelListIndexTipBone.setContent(bones)
		pModelListIndexBaseBone.setContent(bones)
		pModelListMiddleTipBone.setContent(bones)
		pModelListMiddleBaseBone.setContent(bones)
		pModelListRingTipBone.setContent(bones)
		pModelListRingBaseBone.setContent(bones)
		pModelListPinkyTipBone.setContent(bones)
		pModelListPinkyBaseBone.setContent(bones)
	end
	
	/** Update slot lists. */
	public func void updateSlotLists(Array slots)
		pModelListTrackerSlot.setContent(slots)
	end
	
	/** Update move lists. */
	public func void updateMoveLists(Array moves)
		pModelListMoveHandsClosed.setContent(moves)
	end
end
