/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2022, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Gui

pin Democap.Behaviors
pin Dragengine.Gui.Events
pin Dragengine.Scenery
pin Dragengine.Preloading
pin Dragengine.Utils


/**
 * Interaction bubble button duplicate object.
 */
class IBDuplicate extends InteractionBubbleButton
	/** Factory. */
	class Factory implements ECBInteractionBubble.ButtonFactory
		protected var Image pImage
		
		public func new()
			pImage = Image.new("/content/gui/images/interactionBubble/icons/duplicate.png")
		end
		
		public func void createAndAddButtons(ECBInteractionBubble.Instance instance)
			instance.getPanelButtonsSelected().addWidget(IBDuplicate.new(instance, pImage))
		end
	end
	
	
	/** Create button. */
	public func new(ECBInteractionBubble.Instance bubble, Image image) super(bubble, image)
		setToolTip("Duplicate object")
	end
	
	/** Fire action. */
	public func void fireAction()
		var BehaviorElement element = getElement()
		if element == null
			return
		end
		
		var GameWorld gameWorld = element.getGameWorld()
		var StubElement stub = StubElement.new(element.getStub())
		var BehaviorElementClass eclass = stub.getClass() cast BehaviorElementClass
		var ECBSceneObject sceneObject = ECBSceneObject.getBehaviorIn(eclass)
		
		if eclass.getPersistable()
			stub.setID(GameApp.getGameApp().getIDGenerator().nextID())
		end
		
		var DMatrix matrix = element.getElementMatrix() * DMatrix.newTranslation(1, 0, 1)
		stub.setPosition(matrix.getPosition())
		stub.setRotation(matrix.getEulerAngles().toVector())
		
		if not sceneObject.runSceneObjectStubInitializers(stub, null)
			return
		end
		
		element = stub.createElement() cast BehaviorElement
		gameWorld.addElement(element)
		
		TimerBlock.new(0, false, block
			ECBSelectable.getInstanceIn(element).selectElement()
		end)
	end
end
