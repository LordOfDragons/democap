/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap

pin Dragengine.Gui


/**
 * List of stage directions.
 */
class StageDirections
	var DefaultListModel pModel
	
	
	
	/** Create list. */
	func new()
		pModel = DefaultListModel.new()
	end
	
	/** Create list. */
	func new(StageDirections directions)
		pModel = DefaultListModel.new(directions.pModel.getContent().map(block StageDirection each
			return StageDirection.new(each)
		end))
	end
	
	/** Dispose of list. */
	func void dispose()
		pModel = null
	end
	
	
	
	/** Count of stage directions. */
	func int getCount()
		return pModel.getCount()
	end
	
	/** Stage direction at index. */
	func StageDirection getAt(int index)
		return pModel.getAt(index) cast StageDirection
	end
	
	/** Add stage direction. */
	func void add(StageDirection stageDirection)
		if stageDirection == null
			throw ENullPointer.new("stageDirection")
		end
		pModel.add(stageDirection)
	end
	
	/** Move stage direction. */
	func void move(StageDirection stageDirection, int index)
		pModel.move(stageDirection, index)
	end
	
	/** Remove stage direction. */
	func void remove(StageDirection stageDirection)
		pModel.remove(stageDirection)
	end
	
	/** Remove all stage directions. */
	func void removeAll()
		pModel.removeAll()
	end
	
	/** Visit staged directions with block. Block receives as argument StageDirection. */
	func void forEach(Block ablock)
		pModel.forEach(ablock)
	end
	
	/**
	 * Collect stage directions with block. Block receives as argument StageDirection
	 * and has to return true to include or false to exclude stage direction.
	 * Returns Array of StageDirection.
	 */
	func Array collect(Block ablock)
		return pModel.collect(ablock)
	end
	
	/** List of stage directions as Array of StageDirection. */
	func Array toArray()
		return pModel.getContent()
	end
	
	
	
	/** List model. */
	func DefaultListModel getModel()
		return pModel
	end
	
	/** Selected stage direction or null. */
	func StageDirection getSelected()
		return pModel.getSelectedElement() cast StageDirection
	end
	
	/** Set selected stage direction or null. */
	func void setSelected(StageDirection stageDirection)
		pModel.setSelectedElement(stageDirection)
	end
end
