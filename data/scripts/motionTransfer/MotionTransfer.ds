/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.MotionTransferSystem

pin Democap.Characters

pin Dragengine.Animators
pin Dragengine.LoadSave
pin Dragengine.Scenery
pin Dragengine.Utils
pin Dragengine.XML


/**
 * Definition of how motion is transfered from the tracking devices to the animation.
 * Multiple motion transfers make up a motion capture configuration each one dealing
 * with an individual body part. This makes the motion capture configuration easy to
 * define and customizeable.
 */
interface MotionTransfer
	/** Factory identifier. */
	func String factoryID()
	
	/** Unique name of motion transfer. */
	func String getName()
	
	/** Set name of motion transfer. Descriptive nature only. Can be duplicate. */
	func void setName(String name)
	
	/** Init element class. */
	func void initElementClass(BaseVRActorClass eclass, AnimatorDefinition adef)
	
	/** Reset calibration. */
	func void resetCalibration()
	
	/** Calibrate character. */
	func void calibrate(CharacterConfiguration config, BaseVRActor actor)
	
	/** Create copy of motion transfer. */
	func MotionTransfer createCopy()
	
	/** Load from XML. */
	func void load(BaseXmlLoader loader, EasyXMLElement root)
	
	/** Save to XML. */
	func void save(BaseXmlLoader loader, EasyXMLElement tag)
end
