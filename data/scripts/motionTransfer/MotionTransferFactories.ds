/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.MotionTransferSystem

pin Dragengine.Utils


/**
 * List of motion transfer factories factories.
 */
class MotionTransferFactories
	var Dictionary pFactories
	
	
	
	/** Create motion transfer list. */
	func new()
		pFactories = Dictionary.new()
	end
	
	
	
	/** Count of motion transfer factories. */
	func int getCount()
		return pFactories.getCount()
	end
	
	/** Motion transfer factory with identifier or null if absent. */
	func MotionTransferFactory getAt(String identifier)
		return pFactories.getAt(identifier, null) cast MotionTransferFactory
	end
	
	/** Add motion transfer factory. */
	func void add(MotionTransferFactory factory)
		if pFactories.has(factory.factoryID())
			throw EInvalidParam.new("factory with identifier is present")
		end
		pFactories.setAt(factory.factoryID(), factory)
	end
	
	/** Array of MotionTransferFactory. */
	func Array toArray()
		return pFactories.getValues()
	end
	
	/** Array of MotionTransferFactory sorted by display name. */
	func Array toArraySorted()
		return pFactories.getValues().sorted(block MotionTransferFactory a, MotionTransferFactory b
			return a.displayName().compareNoCase(b.displayName())
		end)
	end
end
