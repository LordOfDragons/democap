/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.MotionTransferSystem

pin Dragengine.LoadSave
pin Dragengine.Scenery
pin Dragengine.Utils
pin Dragengine.XML


/**
 * Default implementation of MotionTransfer.
 */
abstract class DefaultMotionTransfer implements MotionTransfer
	private var String pFactoryID
	private var String pName
	
	
	
	/** Create default motion transfer. */
	public func new(String factoryID)
		if factoryID == null
			throw ENullPointer.new("factoryID")
		end
		pFactoryID = factoryID
	end
	
	
	
	/** Factory identifier. */
	public func String factoryID()
		return pFactoryID
	end
	
	/** Name of motion transfer. Descriptive nature only. Can be duplicate. */
	public func String getName()
		return pName
	end
	
	/** Set name of motion transfer. Descriptive nature only. Can be duplicate. */
	public func void setName(String name)
		if name == null
			throw ENullPointer.new("name")
		end
		pName = name
	end
	
	/** Init element class. */
	public func void initElementClass(BaseVRActorClass eclass)
	end
	
	/** Load from XML. */
	public func void load(BaseXmlLoader loader, EasyXMLElement root)
	end
	
	/** Save to XML. */
	public func void save(BaseXmlLoader loader, EasyXMLElement tag)
	end
end
