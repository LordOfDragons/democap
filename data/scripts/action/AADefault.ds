/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Actions

pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.Scenery
pin Dragengine.Utils


/**
 * Default BaseVRActor action. Used when the character is spawned in the world but no
 * particular action is running. This is the default action characters spawn with.
 */
class AADefault extends AABase
	/** Factory for loading actor actions. */
	public class Factory implements PersistencyFactory, ECBehaviorActorAIAction.ActionFactory
		public static fixed var String name = "AADefault"
		
		public func new()
		end
		
		public func Persistable readObjectFromFile(PersistencyEnvironment env, FileReader reader)
			return AADefault.new()
		end
		
		public static func void registerFactory(Persistency persistency)
			persistency.addFactory(name, Factory.new())
		end
		
		public func BaseActorAction createAction(ECBehaviorActorAIAction.Instance instance)
			return AADefault.new()
		end
	end
	
	
	
	/** Create action. */
	public func new()
	end
	
	
	
	/** Name of PersistencyFactory required to load object from file. */
	public func String persistencyFactoryName()
		return Factory.name
	end
	
	
	
	/** Trigger pulled. */
	public func void triggerPull(bool rightHand)
	end
	
	/** Trigger released. */
	public func void triggerRelease(bool rightHand)
	end
	
	
	
	/** Menu button pressed. */
	public func void menuPress(bool rightHand)
	end
	
	/** Menu button released. */
	public func void menuRelease(bool rightHand)
	end
end
