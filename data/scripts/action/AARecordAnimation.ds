/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2021, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap.Actions

pin Democap.Actors
pin Democap.Behaviors
pin Democap.Characters

pin Dragengine.LoadSave
pin Dragengine.Preloading
pin Dragengine.Scenery
pin Dragengine.Utils


/**
 * BaseVRActor action running while animation is recorded.
 */
class AARecordAnimation extends AABase
	/** Factory for loading actor actions. */
	public class Factory implements PersistencyFactory, ECBehaviorActorAIAction.ActionFactory
		public static fixed var String name = "AARecordAnimation"
		
		public func new()
		end
		
		public func Persistable readObjectFromFile(PersistencyEnvironment env, FileReader reader)
			return AARecordAnimation.new()
		end
		
		public static func void registerFactory(Persistency persistency)
			persistency.addFactory(name, Factory.new())
		end
		
		public func BaseActorAction createAction(ECBehaviorActorAIAction.Instance instance)
			return AARecordAnimation.new()
		end
	end
	
	
	
	protected var ECBRecordAnimation.Instance recordAnimation
	
	
	
	/** Create action. */
	public func new()
	end
	
	
	
	/** Action has been activated. */
	public func void activate(BehaviorElement actor)
		super.activate(actor)
		
		log("Start recording animation")
		recordAnimation.startRecording()
	end
	
	/**
	 * Init behaviors
	 */
	protected func void initBehaviors()
		super.initBehaviors()
		
		recordAnimation = ECBRecordAnimation.getInstanceIn(actor)
	end
	
	
	/** Menu button pressed. */
	public func void menuPress(bool rightHand)
		recordAnimation.stopRecording()
		log("Stop recording")
		
		aiAction.setAction(AADefault.new())
	end
	
	
	
	/** Name of PersistencyFactory required to load object from file. */
	public func String persistencyFactoryName()
		return Factory.name
	end
end
