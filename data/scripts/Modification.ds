/* 
 * Drag[en]gine Motion Capture
 *
 * Copyright (C) 2024, DragonDreams (info@dragondreams.ch)
 * 
 * This program is free software; you can redistribute it and/or 
 * modify it under the terms of the GNU General Public License 
 * as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later 
 * version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

namespace Democap
pin Dragengine.Scenery


/**
 * Base class for modifications creating specific script objects.
 * 
 * Modifications qualifying for such situations have to create one class
 * extending this base class and implement the required functions. The
 * class is required to be located in the namespace "Democap.Modifications".
 * This class should only create the necessary objects and adding them to the
 * right locations. This class should not contain actual functionality to
 * contain them properly in modification specific namespaces.
 */
class Modification
	/** Creat instance of Modification. */
	func new()
	end
	
	
	/**
	 * Create element classes and add them to element class list.
	 * 
	 * Add them to \ref BaseGameApp#getElementClassList().
	 * 
	 * Called after internal element classes have been created and added and
	 * before XML element classes are loaded.
	 */
	func void createAndAddElementClasses(GameApp app)
	end
	
	/**
	 * Add interaction bubble button factories.
	 * 
	 * Add them to \ref GameApp#getInteractionBubbleButtonFactories().
	 * 
	 * Called after \ref GameApp#addInteractionBubbleButtonFactories() finished.
	 */
	func void addInteractionBubbleButtonFactories(GameApp app)
	end
	
	/**
	 * Create motion transfer factories.
	 * 
	 * Add them to \ref GameApp#getMotionTransferFactories().
	 * 
	 * Called after \ref GameApp#addMotionTransferFactories() finished.
	 */
	func void addMotionTransferFactories(GameApp app)
	end
	
	/**
	 * Initialize game.
	 * 
	 * Called after \ref GameApp#initGame() finished.
	 */
	func void initGame(GameApp app)
	end
	
	/**
	 * Launch application.
	 * 
	 * Called after \ref GameApp#launchApplication() finished.
	 */
	func void launchApplication(GameApp app)
	end
	
	/**
	 * Add game world behaviors to MoCapGameWorld.
	 * 
	 * Add behaviors using \ref GameWorld#addBehavior(GWBehavior).
	 * 
	 * Called after MoCapGameWorld constructor finished.
	 */
	func void addGameWorldBehaviors(MoCapGameWorld gameWorld)
	end
	
	
	/**
	 * Cleaning up.
	 * 
	 * Called at start of \ref GameApp#cleanUp() after settings have been saved.
	 */
	func void cleanUp(GameApp app)
	end
end
